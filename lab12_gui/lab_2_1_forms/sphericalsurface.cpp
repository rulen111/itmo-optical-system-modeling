/////////////////////////////////////////////////////////////////////////////
// Прикладное программирование
// Вычисление параксиальных характеристик линзы
// Класс Сферическая Поверхность
// sphericalsurface.cpp
// 
// Ахмаров Руслан
// Университет ИТМО, B34003
/////////////////////////////////////////////////////////////////////////////
// подключение описания класса
#include "sphericalsurface.h"

/////////////////////////////////////////////////////////////////////////////
// Конструктор по умолчанию
SphericalSurface::SphericalSurface() {
	m_r = 1.;
}
/////////////////////////////////////////////////////////////////////////////
// Деструктор
SphericalSurface::~SphericalSurface() {}
/////////////////////////////////////////////////////////////////////////////
// Модификатор m_r
void SphericalSurface::SetR(double r) {
	m_r = r;
}
/////////////////////////////////////////////////////////////////////////////
// Селектор m_r
double SphericalSurface::GetR() {
	return m_r;
}
/////////////////////////////////////////////////////////////////////////////
// Формирование матрицы преобразования
void SphericalSurface::GetTransformMatrix(Matrix<double>& transform, double n, double n_) {
	transform.setValue(0, 0, 1);
	transform.setValue(0, 1, 0);
	double elem = (1 / this->GetR()) * (-1.) * (n_ - n);
	transform.setValue(1, 0, elem);
	transform.setValue(1, 1, 1);
}
/////////////////////////////////////////////////////////////////////////////